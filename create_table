#!/bin/bash


## function read table name 

function get_table_name
{
	check=0
 
 while [ $check -eq 0 ]	
 do
 	check=1
 	echo "Enter table name:"
 	read table_name
 
 if [ -z "$table_name" ]; then
 	check=0
 	echo "The string is empty."
 	continue
 fi
 
 
 if ! [[ "$table_name" =~ ^[a-zA-Z][a-zA-Z0-9_]*$ ]]; then
        echo "Error: Table name must start with a letter and end with letters, numbers, and underscores."
        check=0
        continue
 fi
 
 
 if [ -f "${table_name}.data" ]; then
		
   	echo "Error: Table name already exists."
   	check=0
   	continue
 fi
 
 
 done

}


## function read columns count

function get_columns_number
{
	
	check=0
 
 while [ $check -eq 0 ]	
 do
	check=1

	echo "Enter number of columns:"
 	read columns_number
 	
	if ! [[ "$columns_number" =~ ^[0-9]+$ ]];then
		echo "Error: Please enter a valid positive number."
		check=0
		continue
	fi
	
	if [ "$columns_number" -eq 0 ];then
	
		 echo "Error: The number of columns must be not equal zero"
		 check=0
		 continue
	fi 
 
 	
 
 done

}

## function read columns name

function get_column_name
{
	check=0
	
	while [ $check -eq 0 ]
	do
	check=1
	echo "Enter name of column:"
 	read column_name
	
	if [ -z "$column_name" ]; then
                echo "Error: Column name empty."
                check=0
                continue
        fi
	
	if ! [[ "$column_name" =~ ^[a-zA-Z][a-zA-Z0-9_]*$ ]]; then
        	echo "Error: Column name must start with a letter "
                check=0
                continue
        fi
	
	if [[ " ${column_names[@]} " =~ " $column_name " ]]; then
                echo "Error: Column name '$column_name' already exists"
                check=0
                continue
        fi
	
	done

}

## function read columns datatype

function get_column_datatype
{
	check=0
	
	while [ $check -eq 0 ]
	do
	check=1
	echo "Enter column data type int or text:"
	read column_datatype
	
	if [[ "$column_datatype" != "text" && "$column_datatype" != "int" ]]; then
		check=0
		echo "error! Enter int or text only "
	fi
	
	done



}

## function read order of pk column

function get_pk_column
{

	check=0
	
	while [ $check -eq 0 ]
	do
	
	check=1
	echo "Enter number of pk column"
	read pk_column
	
	if ! [[ "$pk_column" =~ ^[0-9]+$ ]] || [ "$pk_column" -eq 0 ]; then
    		echo "Invalid input. Please enter a positive number."
		check=0
		continue
	fi
	
	if ! [[ "$pk_column" -ge 1 && "$pk_column" -le "$columns_number" ]]; then
		
		echo "Invalid input. Please enter a number between 1 and $columns_number."
		check=0	
	fi
		
		
	done


}


# main function
function create_table
{	
	database_path=$1
 	column_names=()
 	column_datatypes=()
	
	#get table name and number of columns
	get_table_name
	get_columns_number
	
	#set columns name and datatypes
	for ((i=0; i<$columns_number; i++)); do
    		get_column_name
    		get_column_datatype
    		column_names[i]=$column_name
    		column_datatypes[i]=$column_datatype
	done
	
	## get primary column
	get_pk_column
	
	path=${database_path}/${table_name}
	
	## create data and meta files
	
	touch ${path}.data
	
	echo "table_name:$table_name">${path}.meta
	
	echo "columns_number:$columns_number">>${path}.meta
	
	columns_name_string=$(IFS=,; echo "${column_names[*]}")
	
	echo "columns_name:$columns_name_string">>${path}.meta
	
	columns_datatype_string=$(IFS=,; echo "${column_datatypes[*]}")
	
	echo "columns_datatypes:$columns_datatype_string">>${path}.meta
	
	echo "pk_column_number:$pk_column">>${path}.meta
	

}

# only need path of database directory
create_table $1
